/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticationLayoutRouteImport } from './routes/_unauthenticationLayout/route'
import { Route as AuthenticationLayoutRouteImport } from './routes/_authenticationLayout/route'
import { Route as AuthenticationLayoutIndexImport } from './routes/_authenticationLayout/index'
import { Route as AuthenticationLayoutProductIndexImport } from './routes/_authenticationLayout/product/index'
import { Route as UnauthenticationLayoutAuthRegisterImport } from './routes/_unauthenticationLayout/auth/register'
import { Route as UnauthenticationLayoutAuthLoginImport } from './routes/_unauthenticationLayout/auth/login'
import { Route as AuthenticationLayoutProductProductIdImport } from './routes/_authenticationLayout/product/$productId'

// Create/Update Routes

const UnauthenticationLayoutRouteRoute =
  UnauthenticationLayoutRouteImport.update({
    id: '/_unauthenticationLayout',
    getParentRoute: () => rootRoute,
  } as any)

const AuthenticationLayoutRouteRoute = AuthenticationLayoutRouteImport.update({
  id: '/_authenticationLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationLayoutIndexRoute = AuthenticationLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticationLayoutRouteRoute,
} as any)

const AuthenticationLayoutProductIndexRoute =
  AuthenticationLayoutProductIndexImport.update({
    id: '/product/',
    path: '/product/',
    getParentRoute: () => AuthenticationLayoutRouteRoute,
  } as any)

const UnauthenticationLayoutAuthRegisterRoute =
  UnauthenticationLayoutAuthRegisterImport.update({
    id: '/auth/register',
    path: '/auth/register',
    getParentRoute: () => UnauthenticationLayoutRouteRoute,
  } as any)

const UnauthenticationLayoutAuthLoginRoute =
  UnauthenticationLayoutAuthLoginImport.update({
    id: '/auth/login',
    path: '/auth/login',
    getParentRoute: () => UnauthenticationLayoutRouteRoute,
  } as any)

const AuthenticationLayoutProductProductIdRoute =
  AuthenticationLayoutProductProductIdImport.update({
    id: '/product/$productId',
    path: '/product/$productId',
    getParentRoute: () => AuthenticationLayoutRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticationLayout': {
      id: '/_authenticationLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticationLayout': {
      id: '/_unauthenticationLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticationLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticationLayout/': {
      id: '/_authenticationLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticationLayoutIndexImport
      parentRoute: typeof AuthenticationLayoutRouteImport
    }
    '/_authenticationLayout/product/$productId': {
      id: '/_authenticationLayout/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof AuthenticationLayoutProductProductIdImport
      parentRoute: typeof AuthenticationLayoutRouteImport
    }
    '/_unauthenticationLayout/auth/login': {
      id: '/_unauthenticationLayout/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof UnauthenticationLayoutAuthLoginImport
      parentRoute: typeof UnauthenticationLayoutRouteImport
    }
    '/_unauthenticationLayout/auth/register': {
      id: '/_unauthenticationLayout/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof UnauthenticationLayoutAuthRegisterImport
      parentRoute: typeof UnauthenticationLayoutRouteImport
    }
    '/_authenticationLayout/product/': {
      id: '/_authenticationLayout/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof AuthenticationLayoutProductIndexImport
      parentRoute: typeof AuthenticationLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticationLayoutRouteRouteChildren {
  AuthenticationLayoutIndexRoute: typeof AuthenticationLayoutIndexRoute
  AuthenticationLayoutProductProductIdRoute: typeof AuthenticationLayoutProductProductIdRoute
  AuthenticationLayoutProductIndexRoute: typeof AuthenticationLayoutProductIndexRoute
}

const AuthenticationLayoutRouteRouteChildren: AuthenticationLayoutRouteRouteChildren =
  {
    AuthenticationLayoutIndexRoute: AuthenticationLayoutIndexRoute,
    AuthenticationLayoutProductProductIdRoute:
      AuthenticationLayoutProductProductIdRoute,
    AuthenticationLayoutProductIndexRoute:
      AuthenticationLayoutProductIndexRoute,
  }

const AuthenticationLayoutRouteRouteWithChildren =
  AuthenticationLayoutRouteRoute._addFileChildren(
    AuthenticationLayoutRouteRouteChildren
  )

interface UnauthenticationLayoutRouteRouteChildren {
  UnauthenticationLayoutAuthLoginRoute: typeof UnauthenticationLayoutAuthLoginRoute
  UnauthenticationLayoutAuthRegisterRoute: typeof UnauthenticationLayoutAuthRegisterRoute
}

const UnauthenticationLayoutRouteRouteChildren: UnauthenticationLayoutRouteRouteChildren =
  {
    UnauthenticationLayoutAuthLoginRoute: UnauthenticationLayoutAuthLoginRoute,
    UnauthenticationLayoutAuthRegisterRoute:
      UnauthenticationLayoutAuthRegisterRoute,
  }

const UnauthenticationLayoutRouteRouteWithChildren =
  UnauthenticationLayoutRouteRoute._addFileChildren(
    UnauthenticationLayoutRouteRouteChildren
  )

export interface FileRoutesByFullPath {
  '': typeof UnauthenticationLayoutRouteRouteWithChildren
  '/': typeof AuthenticationLayoutIndexRoute
  '/product/$productId': typeof AuthenticationLayoutProductProductIdRoute
  '/auth/login': typeof UnauthenticationLayoutAuthLoginRoute
  '/auth/register': typeof UnauthenticationLayoutAuthRegisterRoute
  '/product': typeof AuthenticationLayoutProductIndexRoute
}

export interface FileRoutesByTo {
  '': typeof UnauthenticationLayoutRouteRouteWithChildren
  '/': typeof AuthenticationLayoutIndexRoute
  '/product/$productId': typeof AuthenticationLayoutProductProductIdRoute
  '/auth/login': typeof UnauthenticationLayoutAuthLoginRoute
  '/auth/register': typeof UnauthenticationLayoutAuthRegisterRoute
  '/product': typeof AuthenticationLayoutProductIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticationLayout': typeof AuthenticationLayoutRouteRouteWithChildren
  '/_unauthenticationLayout': typeof UnauthenticationLayoutRouteRouteWithChildren
  '/_authenticationLayout/': typeof AuthenticationLayoutIndexRoute
  '/_authenticationLayout/product/$productId': typeof AuthenticationLayoutProductProductIdRoute
  '/_unauthenticationLayout/auth/login': typeof UnauthenticationLayoutAuthLoginRoute
  '/_unauthenticationLayout/auth/register': typeof UnauthenticationLayoutAuthRegisterRoute
  '/_authenticationLayout/product/': typeof AuthenticationLayoutProductIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/product/$productId'
    | '/auth/login'
    | '/auth/register'
    | '/product'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/product/$productId'
    | '/auth/login'
    | '/auth/register'
    | '/product'
  id:
    | '__root__'
    | '/_authenticationLayout'
    | '/_unauthenticationLayout'
    | '/_authenticationLayout/'
    | '/_authenticationLayout/product/$productId'
    | '/_unauthenticationLayout/auth/login'
    | '/_unauthenticationLayout/auth/register'
    | '/_authenticationLayout/product/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticationLayoutRouteRoute: typeof AuthenticationLayoutRouteRouteWithChildren
  UnauthenticationLayoutRouteRoute: typeof UnauthenticationLayoutRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticationLayoutRouteRoute: AuthenticationLayoutRouteRouteWithChildren,
  UnauthenticationLayoutRouteRoute:
    UnauthenticationLayoutRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticationLayout",
        "/_unauthenticationLayout"
      ]
    },
    "/_authenticationLayout": {
      "filePath": "_authenticationLayout/route.ts",
      "children": [
        "/_authenticationLayout/",
        "/_authenticationLayout/product/$productId",
        "/_authenticationLayout/product/"
      ]
    },
    "/_unauthenticationLayout": {
      "filePath": "_unauthenticationLayout/route.ts",
      "children": [
        "/_unauthenticationLayout/auth/login",
        "/_unauthenticationLayout/auth/register"
      ]
    },
    "/_authenticationLayout/": {
      "filePath": "_authenticationLayout/index.ts",
      "parent": "/_authenticationLayout"
    },
    "/_authenticationLayout/product/$productId": {
      "filePath": "_authenticationLayout/product/$productId.ts",
      "parent": "/_authenticationLayout"
    },
    "/_unauthenticationLayout/auth/login": {
      "filePath": "_unauthenticationLayout/auth/login.ts",
      "parent": "/_unauthenticationLayout"
    },
    "/_unauthenticationLayout/auth/register": {
      "filePath": "_unauthenticationLayout/auth/register.ts",
      "parent": "/_unauthenticationLayout"
    },
    "/_authenticationLayout/product/": {
      "filePath": "_authenticationLayout/product/index.ts",
      "parent": "/_authenticationLayout"
    }
  }
}
ROUTE_MANIFEST_END */
